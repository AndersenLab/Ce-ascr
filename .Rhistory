scale_fill_manual(values=c("grey","red"))
plot_man_a3a5
processed_mapping <- read.delim("Raw/Analysis_Results-20211021_ratio_outliers/Mapping/Processed/processed_a3a5_AGGREGATE_mapping.tsv", stringsAsFactors=FALSE) %>%
dplyr::mutate(CHROM = factor(CHROM, levels = c("I","II","III","IV","V","X","MtDNA"))) %>%
dplyr::select(-marker) %>%
tidyr::unite("marker", CHROM, POS, sep = ":", remove = F)
gm <- read.table("Raw/Analysis_Results-20211021_ratio_outliers/Genotype_Matrix/Genotype_Matrix.tsv", header = T)
snp_df <- processed_mapping %>% na.omit()
ld_snps <- dplyr::filter(gm, CHROM %in% snp_df$CHROM, POS %in% snp_df$POS)
ld_snps <- data.frame(snp_id = paste(ld_snps$CHROM, ld_snps$POS,
sep = "_"), data.frame(ld_snps)[, 5:ncol(ld_snps)])
sn <- list()
for (i in 1:nrow(ld_snps)) {
sn[[i]] <- genetics::genotype(as.character(gsub(1, "T/T",
gsub(-1, "A/A", ld_snps[i, 4:ncol(ld_snps)]))))
}
test <- data.frame(sn)
colnames(test) <- (ld_snps$snp_id)
ldcalc <- t(genetics::LD(test)[[4]])^2
diag(ldcalc) <- 1
TRAIT <- unique(processed_mapping$trait)
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = QTL1, y = QTL2)) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
plot_man_a3a5 <- qtl_a3a5 %>%
dplyr::distinct(CHROM, POS, trait, .keep_all=T) %>%
dplyr::filter(CHROM != "MtDNA") %>%
dplyr::mutate(QTL = ifelse(log10p >=eigen_BF_adjusted, "yes", "no")) %>%
ggplot(.) +
geom_rect(data=dplyr::filter(qtl_a3a5,CHROM != "MtDNA", log10p >=eigen_BF_adjusted),
aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "blue"),
color = "blue",fill = "cyan",linetype = 2,
alpha=.2) +
geom_point(alpha=0.7, aes(x=POS/1e6, y=log10p, fill=QTL), size = 1, shape=21) +
geom_rect(data=df_chr_length, aes(xmin =  start/1e6, xmax = stop/1e6, ymin = 7, ymax=8),
color='transparent', fill='transparent', size =0.1) +
geom_hline(yintercept = eigen_BF_adjusted, color='darkgrey', alpha = 0.8, linetype=2) +
theme_bw() +
theme(panel.grid=element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text = element_text(size=10, color='black'),
axis.title = element_text(size=11, color='black'),
axis.text.x = element_blank(),
title = element_text(size=11, color='black'),
legend.position = 'none') +
facet_grid(~CHROM, scale='free_x', space = 'free') +
labs(x="Genomic position (Mb)", y="-log10(p)") +
ggtitle("ascr#3:ascr#5") +
scale_y_continuous(breaks = c(0,3,6,9,12)) +
scale_fill_manual(values=c("grey","red"))
plot_man_a3a5
eigen_BF_adjusted <- unique(qtl_a3a5$BF)
eigen_BF_adjusted = independent_test_cutoff+log10(24)
# load independent tests result
total_independent_tests <- read.table("Raw/Analysis_Results-20211021_fraction_outliers/Genotype_Matrix/total_independent_tests.txt", quote="\"", comment.char="", stringsAsFactors=FALSE)
independent_tests <- total_independent_tests[[1]]
# load independent tests result
total_independent_tests <- read.table("Raw/Analysis_Results-20211021_fraction_outliers/Genotype_Matrix/total_independent_tests.txt", quote="\"", comment.char="", stringsAsFactors=FALSE)
# load independent tests result
total_independent_tests <- read.table("Raw/Analysis_Results-20211021_fraction_outliers/Genotype_Matrix/total_independent_tests.txt", quote="\"", comment.char="", stringsAsFactors=FALSE)
# load independent tests result
total_independent_tests <- read.table("Raw/Analysis_Results-20211021_ratio_outliers/Genotype_Matrix/total_independent_tests.txt", quote="\"", comment.char="", stringsAsFactors=FALSE)
independent_tests <- total_independent_tests[[1]]
independent_test_cutoff <- -log10(0.05/independent_tests)
eigen_BF_adjusted = independent_test_cutoff+log10(24)
plot_man_a3a5 <- qtl_a3a5 %>%
dplyr::distinct(CHROM, POS, trait, .keep_all=T) %>%
dplyr::filter(CHROM != "MtDNA") %>%
dplyr::mutate(QTL = ifelse(log10p >=eigen_BF_adjusted, "yes", "no")) %>%
ggplot(.) +
geom_rect(data=dplyr::filter(qtl_a3a5,CHROM != "MtDNA", log10p >=eigen_BF_adjusted),
aes(xmin = startPOS/1e6,    # this is the plot boundary for LD and gene plots
xmax = endPOS/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "blue"),
color = "blue",fill = "cyan",linetype = 2,
alpha=.2) +
geom_point(alpha=0.7, aes(x=POS/1e6, y=log10p, fill=QTL), size = 1, shape=21) +
geom_rect(data=df_chr_length, aes(xmin =  start/1e6, xmax = stop/1e6, ymin = 7, ymax=8),
color='transparent', fill='transparent', size =0.1) +
geom_hline(yintercept = eigen_BF_adjusted, color='darkgrey', alpha = 0.8, linetype=2) +
theme_bw() +
theme(panel.grid=element_blank(),
panel.spacing = unit(0.1, "lines"),
axis.text = element_text(size=10, color='black'),
axis.title = element_text(size=11, color='black'),
axis.text.x = element_blank(),
title = element_text(size=11, color='black'),
legend.position = 'none') +
facet_grid(~CHROM, scale='free_x', space = 'free') +
labs(x="Genomic position (Mb)", y="-log10(p)") +
ggtitle("ascr#3:ascr#5") +
scale_y_continuous(breaks = c(0,3,6,9,12)) +
scale_fill_manual(values=c("grey","red"))
plot_man_a3a5
View(qtl_a3a5)
processed_mapping <- qtl_a3a5 %>%
dplyr::mutate(CHROM = factor(CHROM, levels = c("I","II","III","IV","V","X","MtDNA"))) %>%
dplyr::select(-marker) %>%
tidyr::unite("marker", CHROM, POS, sep = ":", remove = F)
gm <- read.table("Raw/Analysis_Results-20211021_ratio_outliers/Genotype_Matrix/Genotype_Matrix.tsv", header = T)
snp_df <- processed_mapping %>% na.omit()
ld_snps <- dplyr::filter(gm, CHROM %in% snp_df$CHROM, POS %in% snp_df$POS)
ld_snps <- data.frame(snp_id = paste(ld_snps$CHROM, ld_snps$POS,
sep = "_"), data.frame(ld_snps)[, 5:ncol(ld_snps)])
sn <- list()
for (i in 1:nrow(ld_snps)) {
sn[[i]] <- genetics::genotype(as.character(gsub(1, "T/T",
gsub(-1, "A/A", ld_snps[i, 4:ncol(ld_snps)]))))
}
test <- data.frame(sn)
colnames(test) <- (ld_snps$snp_id)
ldcalc <- t(genetics::LD(test)[[4]])^2
diag(ldcalc) <- 1
TRAIT <- unique(processed_mapping$trait)
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = QTL1, y = QTL2)) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
processed_mapping <- qtl_a3a5 %>%
dplyr::filter(log10p >=eigen_BF_adjusted) %>%
dplyr::mutate(CHROM = factor(CHROM, levels = c("I","II","III","IV","V","X","MtDNA"))) %>%
dplyr::select(-marker) %>%
tidyr::unite("marker", CHROM, POS, sep = ":", remove = F)
gm <- read.table("Raw/Analysis_Results-20211021_ratio_outliers/Genotype_Matrix/Genotype_Matrix.tsv", header = T)
snp_df <- processed_mapping %>% na.omit()
ld_snps <- dplyr::filter(gm, CHROM %in% snp_df$CHROM, POS %in% snp_df$POS)
ld_snps <- data.frame(snp_id = paste(ld_snps$CHROM, ld_snps$POS,
sep = "_"), data.frame(ld_snps)[, 5:ncol(ld_snps)])
sn <- list()
for (i in 1:nrow(ld_snps)) {
sn[[i]] <- genetics::genotype(as.character(gsub(1, "T/T",
gsub(-1, "A/A", ld_snps[i, 4:ncol(ld_snps)]))))
}
test <- data.frame(sn)
colnames(test) <- (ld_snps$snp_id)
ldcalc <- t(genetics::LD(test)[[4]])^2
diag(ldcalc) <- 1
TRAIT <- unique(processed_mapping$trait)
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = QTL1, y = QTL2)) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
TRAIT
test
View(ldcalc)
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(y = QTL1, x = QTL2)) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = QTL1, y = QTL2)) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything())
ldcalc %>%
as.data.frame()
ldcalc
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT)
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2")
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ldcalc
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 3) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 2) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
View(ldcalc)
save(ldcalc, file="Processed_Data/LD_a3a5.RData")
ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 2) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
FigS4 <- ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 2) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black")) +
labs(title = "Linkage Disequilibrium")
ggsave(FigS4, file = "Plots/Supplementary/FigS4.png", width = 7.5, height = 5)
ggsave(FigS4, file = "Plots/Supplementary/FigS4.png", width = 6, height =4)
FigS4 <- ldcalc %>%
as.data.frame() %>%
dplyr::mutate(QTL1 = rownames(.),
trait = TRAIT) %>%
tidyr::pivot_longer(cols = -c(QTL1, trait), names_to = "QTL2", values_to = "r2") %>%
dplyr::filter(!is.na(r2)) %>%
dplyr::select(QTL1, QTL2, everything()) %>%
ggplot(., mapping = aes(x = factor(QTL1, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")),
y = factor(QTL2, levels=c("II_2429716","II_13692928","IV_6958736","X_148173"), labels = c("II:2429716","II:13692928","IV:6958736","X:148173")))) +
theme_classic() +
geom_tile(aes(fill = r2),colour = "black", size = 2) +
geom_text(aes(label = round(r2, 4))) +
scale_fill_gradient(low="darkgreen", high="red", limits = c(0, 1), name = expression(r^2)) +
theme(axis.title = element_blank(),
axis.text = element_text(colour = "black"))
ggsave(FigS4, file = "Plots/Supplementary/FigS4.png", width = 5, height =4)
pod2_alt <- c("ED3052","JU2001","JU258","NIC166","NIC199","NIC256","QG536")
df_a3a5_pod2 <- read_tsv("Raw/Analysis_Results-20211021_ratio_outliers/Fine_Mappings/Data/a3a5_II_4512-2641359_bcsq_genes.tsv")
df_a3a5_pod2 %>%
dplyr::mutate(VARIANT_IMPACT=ifelse(is.na(VARIANT_IMPACT), "Unknown", VARIANT_IMPACT)) %>%
arrange(desc(VARIANT_IMPACT)) %>%
ggplot(.) +
geom_vline(xintercept = 2429716/1e6, color='black', alpha = 0.5, linetype=2) +
geom_rect(aes(xmin = 1136784/1e6,    # this is the plot boundary for LD and gene plots
xmax = 1152701/1e6,    # this is the plot boundary for LD and gene plots
ymin = 0,
ymax = Inf,
fill = "blue"),
color = "blue",fill = "cyan",linetype = 2, size=0.3,
alpha=.2) +
#geom_vline(xintercept = 1136784/1e6, color='brown', alpha = 0.5, linetype=2) +
#geom_vline(xintercept = 1152701/1e6, color='brown', alpha = 0.5, linetype=2) +
geom_point(alpha=0.7, aes(x=POS/1e6, y=VARIANT_LOG10p, fill=VARIANT_IMPACT), size = 1.5, shape=21) +
theme_bw() +
theme(panel.grid=element_blank(),
axis.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
axis.title = element_text(size=11, color='black'),
title = element_text(size=11, color='black'),
legend.title=element_blank(),
legend.background = element_blank(),
legend.position = 'none') +
scale_fill_manual(values=c("purple", "grey","grey", "grey")) +
scale_x_continuous(expand=c(0.01,0.01))+
labs(x="Genomic position (Mb)", y="-log10(p)")
ratio <- data.frame(combn(as.character(unique(ascr_YA_frac$feature)),m=2))
ratio_list_YA<-list()
for (i in 1:ncol(ratio)) {
as1 <- dplyr::filter(ascr_YA_frac,feature==as.character(ratio[1,i]))%>%
rename(as1 = feature,amount1 = abundance)
as2 <- dplyr::filter(ascr_YA_frac,feature==as.character(ratio[2,i]))%>%
rename(as2 = feature,amount2 = abundance)
comb.as <- left_join(as1,as2,by="strain")%>%
dplyr::mutate(ratio1= amount1/amount2,
ratio2= amount2/amount1)%>%
dplyr::select(strain, ratio1, ratio2)
colnames(comb.as) <- c("strain",
paste(as.character(ratio[1,i]),as.character(ratio[2,i]),sep="_"),
paste(as.character(ratio[2,i]),as.character(ratio[1,i]),sep="_"))
as.ratio.long <- tidyr::gather(comb.as,trait,value,-strain)
ratio_list_YA[[i]] <- as.ratio.long
}
all_ratio_YA <- bind_rows(ratio_list_YA)
df_ratio_split_pod2 <- all_ratio_YA %>%
tidyr::separate(trait, into=c("feature1", "feature2"), sep="_") %>%
dplyr::mutate(pod2_gt = ifelse(strain %in% pod2_alt, 1, -1)) %>%
dplyr::filter(feature1 %in% gsub("\\.","#", heri_features) & feature2 %in% gsub("\\.","#", heri_features))
df_NA_ratio <- data.frame(feature1=unique(df_ratio_split_pod2$feature1),
feature2=unique(df_ratio_split_pod2$feature1),
Variance_explained=NA,
pvalue=NA, mean=NA)
df_ratio_pod2_ve <- df_ratio_split_pod2 %>%
dplyr::group_by(feature1, feature2) %>%
dplyr::summarise(Variance_explained=(rcorr(value, pod2_gt)$r[1,2])^2,
pvalue=rcorr(value, pod2_gt)$P[1,2], mean=mean(value)) %>%
rbind(., df_NA_ratio)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(Hmisc)
df_ratio_pod2_ve <- df_ratio_split_pod2 %>%
dplyr::group_by(feature1, feature2) %>%
dplyr::summarise(Variance_explained=(rcorr(value, pod2_gt)$r[1,2])^2,
pvalue=rcorr(value, pod2_gt)$P[1,2], mean=mean(value)) %>%
rbind(., df_NA_ratio)
df_ratio_pod2_ve %>%
ggplot(.) +
geom_tile(aes(x=feature1, y=feature2, fill=Variance_explained*100)) +
theme_bw() +
theme(axis.text.y = element_text(size= 10, color='black'),
axis.title = element_text(size= 11, color='black'),
axis.text.x = element_text(size= 10, angle = 90, vjust = 0.5, hjust=1, color='black'),
panel.grid = element_blank()) +
scale_fill_gradient(low='white', high='blue') +
labs(fill="Variance\nexplained (%)")
save(df_ratio_pod2_ve, file="Processed_Data/df_ratio_pod2_ve.RData")
FigS5 <- df_ratio_pod2_ve %>%
ggplot(.) +
geom_tile(aes(x=feature1, y=feature2, fill=Variance_explained*100)) +
theme_bw() +
theme(axis.text.y = element_text(size= 10, color='black'),
axis.title = element_text(size= 11, color='black'),
axis.text.x = element_text(size= 10, angle = 90, vjust = 0.5, hjust=1, color='black'),
panel.grid = element_blank()) +
scale_fill_gradient(low='white', high='blue') +
labs(fill="Variance\nexplained (%)")
ggsave(FigS5, file = "Plots/Supplementary/FigS5.png", width = 6, height =4)
FigS5 <- df_ratio_pod2_ve %>%
ggplot(.) +
geom_tile(aes(x=feature1, y=feature2, fill=Variance_explained*100)) +
theme_bw() +
theme(axis.text.y = element_text(size= 10, color='black'),
axis.title = element_blank(),
axis.text.x = element_text(size= 10, angle = 90, vjust = 0.5, hjust=1, color='black'),
panel.grid = element_blank()) +
scale_fill_gradient(low='white', high='blue') +
labs(fill="Variance\nexplained (%)")
ggsave(FigS5, file = "Plots/Supplementary/FigS5.png", width = 6, height =5)
View(indep_strain_info_geo)
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400"))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400"))
View(TableS1)
pheno_strains_YA
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400"))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400"), isotype %in% c(pheno_strains_YA, "JU1400"))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400"), previous_names %in% c(pheno_strains_YA, "JU1400"))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400") | previous_names %in% c(pheno_strains_YA, "JU1400"))
indep_strain_info_geo$strain %in% pheno_strains_YA
pheno_strains_YA[!pheno_strains_YA %in% indep_strain_info_geo$strain]
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400", "ECA259"))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400", "ECA259")) %>%
dplyr::mutate(strain = ifelse(strain=="ECA259", "PB306", strain))
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400", "ECA259")) %>%
dplyr::mutate(strain = ifelse(strain=="ECA259", "PB306", strain)) %>%
dplyr::select(strain, latitude = lat, longitude = long, landscape, substrate, sampled_by)
TableS1 <- indep_strain_info_geo %>%
dplyr::filter(strain %in% c(pheno_strains_YA, "JU1400", "ECA259")) %>%
dplyr::mutate(strain = ifelse(strain=="ECA259", "PB306", strain)) %>%
dplyr::select(strain, latitude = lat, longitude = long, landscape, substrate, sampled_by, isolation_date)
TableS1
setwd(glue::glue("{dirname(rstudioapi::getActiveDocumentContext()$path)}/.."))
write.csv("Manuscript/Initial_submission/Supplementary_Table/TableS1.csv")
write.csv(TableS1, "Manuscript/Initial_submission/Supplementary_Table/TableS1.csv")
?write.csv
write.csv(TableS1, "Manuscript/Initial_submission/Supplementary_Table/TableS1.csv",row.names = F)
write.csv(TableS1, "Manuscript/Initial_submission/Supplementary_Table/TableS1.csv",row.names = F, quote = F)
#sequencing info summary
seq_summary <- read.csv (file = "~/Dropbox/AndersenLab/LabFolders/Daehan/smallRNAseq/170609 sequencing summary.csv")
#sequencing info summary
seq_summary <- read.csv (file = "~/Dropbox/AndersenLab/LabFolders/PastMemeber/Daehan/smallRNAseq/170609 sequencing summary.csv")
#sequencing info summary
seq_summary <- read.csv (file = "~/Dropbox/AndersenLab/LabFolders/PastMemebers/Daehan/smallRNAseq/170609 sequencing summary.csv")
#sequencing info summary
seq_summary <- read.csv (file = "~/Dropbox/AndersenLab/LabFolders/PastMembers/Daehan/smallRNAseq/170609 sequencing summary.csv")
View(seq_summary)
